#include <stdio.h>

// Funções
int lerInt();
float lerFloat();
void menu();

// Função principal
int main() {
    menu();
    return 0;
}

// Struct do produto
struct Produto {
    char *nome;
    float preco;
    int estoque;
};

// Vetor com os produtos
struct Produto produtos[4] = {
    {"Ben 10", 10.0, 50},
    {"Patati", 20.0, 30},
    {"Kick Buttowsk", 15.0, 20},
    {"Eren AOT", 25.0, 15}
};

// Dinheiro disponível
float saldo = 0.0;

// Lê número inteiro com segurança
int lerInt() {
    int valor;
    while (scanf("%d", &valor) != 1) {
        while (getchar() != '\n');
        printf("Você é burro? Digita um número aí: ");
    }
    return valor;
}

// Lê número decimal com segurança
float lerFloat() {
    float valor;
    while (scanf("%f", &valor) != 1) {
        while (getchar() != '\n');
        printf("Você é burro? Digita um valor aí: ");
    }
    return valor;
}

// Menu principal
void menu() {
    int opcao;

    do {
        printf("\n--- MENU ---\n");
        printf("1. Ver Estoque\n");
        printf("2. Financeiro\n");
        printf("3. Vender Produto\n");
        printf("4. Adicionar ao Estoque\n");
        printf("5. Sair\n");
        printf("Escolha: ");
        opcao = lerInt();

        switch (opcao) {
            case 1:
                printf("\n--- ESTOQUE ---\n");
                for (int i = 0; i < 4; i++) {
                    printf("%d - %s: %d unidades\n", i + 1, produtos[i].nome, produtos[i].estoque);
                }
                break;

            case 2: {
                int sub;
                printf("\n--- FINANCEIRO ---\n");
                printf("Saldo atual: R$%.2f\n", saldo);
                printf("1. Adicionar receita\n");
                printf("2. Registrar despesa\n");
                printf("Escolha: ");
                sub = lerInt();

                printf("Valor: R$");
                float valor = lerFloat();

                if (sub == 1) saldo += valor;
                else if (sub == 2) saldo -= valor;
                else printf("Opção inválida!\n");

                break;
            }

            case 3: {
                printf("\n--- VENDER PRODUTO ---\n");
                for (int i = 0; i < 4; i++) {
                    printf("%d - %s (R$%.2f)\n", i + 1, produtos[i].nome, produtos[i].preco);
                }

                printf("Escolha o produto: ");
                int p = lerInt() - 1;

                if (p < 0 || p >= 4) {
                    printf("Produto inválido!\n");
                    break;
                }

                printf("Quantidade: ");
                int q = lerInt();

                if (q > produtos[p].estoque) {
                    printf("Estoque insuficiente!\n");
                } else {
                    produtos[p].estoque -= q;
                    float total = q * produtos[p].preco;
                    saldo += total;
                    printf("Venda concluída! Total: R$%.2f\n", total);
                }

                break;
            }

            case 4: {
                printf("\n--- ADICIONAR ESTOQUE ---\n");
                for (int i = 0; i < 4; i++) {
                    printf("%d - %s (R$%.2f)\n", i + 1, produtos[i].nome, produtos[i].preco);
                }

                printf("Escolha o produto: ");
                int p = lerInt() - 1;

                if (p < 0 || p >= 4) {
                    printf("Produto inválido!\n");
                    break;
                }

                printf("Quantidade: ");
                int q = lerInt();

                float custo = q * produtos[p].preco;

                if (saldo >= custo) {
                    produtos[p].estoque += q;
                    saldo -= custo;
                    printf("Produto adicionado! Custo: R$%.2f\n", custo);
                } else {
                    printf("Saldo insuficiente!\n");
                }

                break;
            }

            case 5:
                printf("Saindo... Saldo final: R$%.2f\n", saldo);
                break;

            default:
                printf("Opção inválida!\n");
        }

    } while (opcao != 5);
}
